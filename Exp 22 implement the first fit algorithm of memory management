#include <stdio.h>
int main() {
    int blockCount, processCount;
    printf("Enter the number of memory blocks: ");
    scanf("%d", &blockCount);
   int blockSize[blockCount], blockAllocated[blockCount];
    printf("Enter the sizes of the memory blocks:\n");
    for (int i = 0; i < blockCount; i++) {
        printf("Block %d size: ", i + 1);
        scanf("%d", &blockSize[i]);
        blockAllocated[i] = -1; // Initially no process is allocated
    }
    printf("\nEnter the number of processes: ");
    scanf("%d", &processCount);
    int processSize[processCount];
    printf("Enter the sizes of the processes:\n");
    for (int i = 0; i < processCount; i++) {
        printf("Process %d size: ", i + 1);
        scanf("%d", &processSize[i]);
    }
    for (int i = 0; i < processCount; i++) {
        for (int j = 0; j < blockCount; j++) {
            if (blockAllocated[j] == -1 && blockSize[j] >= processSize[i]) {
                blockAllocated[j] = i;
                blockSize[j] -= processSize[i];
                break; // Allocate to the first suitable block only
            }
        }
    }
    printf("\nMemory Allocation (First Fit):\n");
    printf("----------------------------------\n");
    printf("Block No.\tAllocated Process\tRemaining Size\n");
    for (int i = 0; i < blockCount; i++) {
        if (blockAllocated[i] != -1)
            printf("%d\t\tP%d\t\t\t%d\n", i + 1, blockAllocated[i] + 1, blockSize[i]);
        else
            printf("%d\t\tNot Allocated\t\t%d\n", i + 1, blockSize[i]);
    }

    return 0;
}
