#include <stdio.h>
int main() {
    int n, i, time = 0, count;
    int qt; // Time Quantum
   printf("Enter number of processes: ");
    scanf("%d", &n);
   int bt[n], rt[n], wt[n], tat[n], at[n];
    for (i = 0; i < n; i++) {
        printf("Enter arrival time for Process %d: ", i + 1);
        scanf("%d", &at[i]);
        printf("Enter burst time for Process %d: ", i + 1);
        scanf("%d", &bt[i]);
        rt[i] = bt[i]; // Initialize remaining time
        wt[i] = 0;
        tat[i] = 0;
    }
   printf("Enter time quantum: ");
    scanf("%d", &qt);
    count = n;
    int done;
   printf("\nGantt Chart:\n");
    while (count > 0) {
        done = 1;
        for (i = 0; i < n; i++) {
            if (rt[i] > 0 && at[i] <= time) {
                done = 0;
                if (rt[i] > qt) {
                    printf("P%d | ", i + 1);
                    time += qt;
                    rt[i] -= qt;
                } else {
                    printf("P%d | ", i + 1);
                    time += rt[i];
                    wt[i] = time - at[i] - bt[i];
                    tat[i] = wt[i] + bt[i];
                    rt[i] = 0;
                    count--;
                }
            }
        }
        if (done)
            time++;
    }
    printf("\n\nProcess\tArrival\tBurst\tWaiting\tTurnaround\n");
    float avg_wt = 0, avg_tat = 0;
    for (i = 0; i < n; i++) {
        printf("P%d\t%d\t%d\t%d\t%d\n", i + 1, at[i], bt[i], wt[i], tat[i]);
        avg_wt += wt[i];
        avg_tat += tat[i];
    }
     printf("\nAverage Waiting Time: %.2f", avg_wt / n);
    printf("\nAverage Turnaround Time: %.2f\n", avg_tat / n);
    return 0;
}
