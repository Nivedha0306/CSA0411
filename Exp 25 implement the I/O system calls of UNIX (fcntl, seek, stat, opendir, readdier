#include <stdio.h>
#include <fcntl.h>    
#include <unistd.h>     
#include <sys/stat.h>
#include <dirent.h>   
#include <string.h>    
#include <stdlib.h>
int main() {
    int fd;
    char buffer[100];
    struct stat fileStat;
    DIR *dir;
    struct dirent *entry;
    fd = open("sample.txt", O_CREAT | O_RDWR, 0644);
    if (fd < 0) {
        perror("Error opening file");
        return 1;
    }
    printf("File 'sample.txt' opened successfully.\n");
    int flags = fcntl(fd, F_GETFL);
    if (flags < 0) {
        perror("Error getting file flags");
    } else {
        printf("Current file flags fetched using fcntl.\n");
    }
    write(fd, "Hello UNIX I/O!\n", strlen("Hello UNIX I/O!\n"));
    lseek(fd, 0, SEEK_SET);
    read(fd, buffer, sizeof(buffer));
    printf("Data from file after lseek:\n%s", buffer);

    // 3. stat()
    if (stat("sample.txt", &fileStat) == 0) {
        printf("\nFile Information using stat():\n");
        printf("File Size: %ld bytes\n", fileStat.st_size);
        printf("Permissions: %o\n", fileStat.st_mode & 0777);
        printf("Inode: %ld\n", fileStat.st_ino);
    } else {
        perror("stat failed");
    }

    close(fd);
    printf("\nListing files in current directory using opendir() and readdir():\n");
    dir = opendir(".");
    if (dir == NULL) {
        perror("Error opening directory");
        return 1;
    }

    while ((entry = readdir(dir)) != NULL) {
        printf("%s\n", entry->d_name);
    }

    closedir(dir);
    return 0;
}
